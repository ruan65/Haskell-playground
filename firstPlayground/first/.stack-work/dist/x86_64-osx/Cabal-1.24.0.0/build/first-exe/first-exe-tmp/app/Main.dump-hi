
==================== FINAL INTERFACE ====================
2017-01-02 23:15:30.505465 UTC

interface main@main:Main 8001
  interface hash: 961eca821b7d8f09831c7126527ba25f
  ABI hash: f4bbad0c3c6911f9a591ff52c94647db
  export-list hash: 2450ee74711ffcc104a31aaf9594e69a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 55bcbf9cd88476a46f95959f602375d0
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.analizeGold
  Main.analizeSilver
  Main.greeting
  Main.main
module dependencies:
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
e98f66cdd8b08c4c221ee08fc4ef56f9
  analizeGold :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (probe :: GHC.Types.Int) ->
                 case probe of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> Main.analizeGold3
                   785# -> Main.analizeGold2
                   999# -> Main.analizeGold1 } }) -}
ad373380a8579095aa8489dee0ee7dbc
  analizeGold1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Highest probe!!!"#) -}
b29e8e135ce9436359cfec1129173452
  analizeGold2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "It's Ok..."#) -}
a6a06b03bbbb2a5cfb7866bd6db72498
  analizeGold3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Could be better..."#) -}
e8a8154dcc6e85e885a304314942fb34
  analizeSilver :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Types.Int) ->
                 case ds of wild { GHC.Types.I# ds1 ->
                 case ds1 of ds2 {
                   DEFAULT -> Main.analizeSilver3
                   777# -> Main.analizeSilver2
                   999# -> Main.analizeSilver1 } }) -}
6299010d5d33ba72483f7ee6ad37fbe2
  analizeSilver1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Highest silver probe"#) -}
b4ce811c66b7376ebf5c8cf8e0041422
  analizeSilver2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Middle silver probe"#) -}
38ba29c8e3fda0656ebd048fb2207f03
  analizeSilver3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "What the fuck the probe is???"#) -}
03faf4177c29debde9f8bbcea09415be
  greeting :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (name :: GHC.Base.String) ->
                 case GHC.Base.eqString name Main.greeting3 of wild {
                   GHC.Types.False -> Main.greeting2
                   GHC.Types.True -> Main.greeting1 }) -}
e515b5a6218ba1ac8e53fcf2d078d018
  greeting1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hi, sweet heart"#) -}
3e70679b962431617fecc0c3d3ca4f4a
  greeting2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Hi, my friend"#) -}
a2b96d45fbfff009d62f725d8afaa2a9
  greeting3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Andrey"#) -}
4370b908e5646a1d2c21ebfe5bd18e5b
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
ba97d88c7d0e3b82a4c1a258dbd7a829
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.analizeSilver3
                   GHC.Types.True
                   eta) -}
e3e4dfcce882c3e96f8e13cd92fc3ae6
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

